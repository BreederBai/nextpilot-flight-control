{#- jinja syntax: http://jinja.pocoo.org/docs/2.9/templates/ -#}

#ifndef _PARAMETERS_AUTOGEN_HPP_
#define _PARAMETERS_AUTOGEN_HPP_

#include <math.h>
#include <stdint.h>
#include <param.h>

// DO NOT EDIT
// This file is autogenerated from *_params.toml

namespace nextpilot { {# wrap the enum in a namespace, otherwise we get shadowing errors for MAV_TYPE #}

/// Enum with all parameters
enum class params : uint16_t {
	{#- enums are guaranteed to start with 0 (if the value for the first is not
	   specified), and then incremented by 1 (the implementation depends on that!)  #}
{%- for param in params %}
	{{ param["name"] }} = {{ loop.index0 }},
{%- endfor %}
	MAX_COUNT
};

static constexpr param_info_s parameters[] = {
{%- for param in params %}
	{.name = "{{ param["name"] }}",
	{%- if param["type"] == "float" -%}
		.type = 4,.value = {{ "{" }}.f32 = {{ param["default"] }}{{ "}" }},
	{%- elif param["type"] == "int32" -%}
		.type = 3,.value = {{ "{" }}.i32 = {{ param["default"] }}{{ "}" }},
	{%- endif -%}
	.flag = {.value = 0}},
{%- endfor %}
};

} // namespace nextpilot

#endif // _PARAMETERS_AUTOGEN_HPP_
