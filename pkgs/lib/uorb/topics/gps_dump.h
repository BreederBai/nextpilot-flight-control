
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file GpsDump.msg */

#pragma once

#include <uORB.h>

#ifndef __cplusplus
#define GPS_DUMP_ORB_QUEUE_LENGTH 8
#endif // __cplusplus


#ifdef __cplusplus
struct __EXPORT gps_dump_s {
#else
struct gps_dump_s {
#endif // __cplusplus
	uint64_t timestamp;
	uint8_t instance;
	uint8_t len;
	uint8_t data[79];
	uint8_t _padding0[7]; // required for logger

#ifdef __cplusplus
	static constexpr uint8_t ORB_QUEUE_LENGTH = 8;
#endif // __cplusplus
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using GpsDump = gps_dump_s;
	} // namespace msg
} // namespace nextpilot
#endif // __cplusplus

/* register this as object request broker structure */
ORB_DECLARE(gps_dump);

#ifdef __cplusplus
void print_message(const orb_metadata *meta, const gps_dump_s& message);
#endif // __cplusplus
