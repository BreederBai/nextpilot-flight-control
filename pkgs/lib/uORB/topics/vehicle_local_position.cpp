
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file VehicleLocalPosition.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/vehicle_local_position.h>

constexpr char __orb_vehicle_local_position_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x89 ref_timestamp;\x8b ref_lat;\x8b ref_lon;\x8a x;\x8a y;\x8a z;\x8a[2] delta_xy;\x8a delta_z;\x8a vx;\x8a vy;\x8a vz;\x8a z_deriv;\x8a[2] delta_vxy;\x8a delta_vz;\x8a ax;\x8a ay;\x8a az;\x8a heading;\x8a delta_heading;\x8a ref_alt;\x8a dist_bottom;\x8a eph;\x8a epv;\x8a evh;\x8a evv;\x8a vxy_max;\x8a vz_max;\x8a hagl_min;\x8a hagl_max;\x8c xy_valid;\x8c z_valid;\x8c v_xy_valid;\x8c v_z_valid;\x86 xy_reset_counter;\x86 z_reset_counter;\x86 vxy_reset_counter;\x86 vz_reset_counter;\x86 heading_reset_counter;\x8c heading_good_for_control;\x8c xy_global;\x8c z_global;\x8c dist_bottom_valid;\x86 dist_bottom_sensor_bitfield;\x8c dead_reckoning;\x86[1] _padding0;";

ORB_DEFINE(vehicle_local_position, struct vehicle_local_position_s, 167, __orb_vehicle_local_position_fields, static_cast<uint8_t>(ORB_ID::vehicle_local_position));
ORB_DEFINE(vehicle_local_position_groundtruth, struct vehicle_local_position_s, 167, __orb_vehicle_local_position_fields, static_cast<uint8_t>(ORB_ID::vehicle_local_position_groundtruth));
ORB_DEFINE(external_ins_local_position, struct vehicle_local_position_s, 167, __orb_vehicle_local_position_fields, static_cast<uint8_t>(ORB_ID::external_ins_local_position));
ORB_DEFINE(estimator_local_position, struct vehicle_local_position_s, 167, __orb_vehicle_local_position_fields, static_cast<uint8_t>(ORB_ID::estimator_local_position));


void print_message(const orb_metadata *meta, const vehicle_local_position_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
