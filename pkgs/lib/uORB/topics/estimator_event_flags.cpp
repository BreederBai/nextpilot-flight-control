
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file EstimatorEventFlags.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/estimator_event_flags.h>

constexpr char __orb_estimator_event_flags_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x88 information_event_changes;\x88 warning_event_changes;\x8c gps_checks_passed;\x8c reset_vel_to_gps;\x8c reset_vel_to_flow;\x8c reset_vel_to_vision;\x8c reset_vel_to_zero;\x8c reset_pos_to_last_known;\x8c reset_pos_to_gps;\x8c reset_pos_to_vision;\x8c starting_gps_fusion;\x8c starting_vision_pos_fusion;\x8c starting_vision_vel_fusion;\x8c starting_vision_yaw_fusion;\x8c yaw_aligned_to_imu_gps;\x8c reset_hgt_to_baro;\x8c reset_hgt_to_gps;\x8c reset_hgt_to_rng;\x8c reset_hgt_to_ev;\x8c gps_quality_poor;\x8c gps_fusion_timout;\x8c gps_data_stopped;\x8c gps_data_stopped_using_alternate;\x8c height_sensor_timeout;\x8c stopping_navigation;\x8c invalid_accel_bias_cov_reset;\x8c bad_yaw_using_gps_course;\x8c stopping_mag_use;\x8c vision_data_stopped;\x8c emergency_yaw_reset_mag_stopped;\x8c emergency_yaw_reset_gps_yaw_stopped;\x86[3] _padding0;";

ORB_DEFINE(estimator_event_flags, struct estimator_event_flags_s, 53, __orb_estimator_event_flags_fields, static_cast<uint8_t>(ORB_ID::estimator_event_flags));


void print_message(const orb_metadata *meta, const estimator_event_flags_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
