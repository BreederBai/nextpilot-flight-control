
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file VehicleCommandAck.msg */

#pragma once

#include <uORB.h>

#ifndef __cplusplus
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_ACCEPTED 0
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED 1
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_DENIED 2
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_UNSUPPORTED 3
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_FAILED 4
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_IN_PROGRESS 5
#define VEHICLE_COMMAND_ACK_VEHICLE_CMD_RESULT_CANCELLED 6
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_GENERIC 0
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_NONE 1
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT 2
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_TIMEOUT 3
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE 4
#define VEHICLE_COMMAND_ACK_ARM_AUTH_DENIED_REASON_BAD_WEATHER 5
#define VEHICLE_COMMAND_ACK_ORB_QUEUE_LENGTH 4
#endif // __cplusplus


#ifdef __cplusplus
struct __EXPORT vehicle_command_ack_s {
#else
struct vehicle_command_ack_s {
#endif // __cplusplus
	uint64_t timestamp;
	uint32_t command;
	int32_t result_param2;
	uint8_t result;
	uint8_t result_param1;
	uint8_t target_system;
	uint8_t target_component;
	bool from_external;
	uint8_t _padding0[3]; // required for logger

#ifdef __cplusplus
	static constexpr uint8_t VEHICLE_CMD_RESULT_ACCEPTED = 0;
	static constexpr uint8_t VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED = 1;
	static constexpr uint8_t VEHICLE_CMD_RESULT_DENIED = 2;
	static constexpr uint8_t VEHICLE_CMD_RESULT_UNSUPPORTED = 3;
	static constexpr uint8_t VEHICLE_CMD_RESULT_FAILED = 4;
	static constexpr uint8_t VEHICLE_CMD_RESULT_IN_PROGRESS = 5;
	static constexpr uint8_t VEHICLE_CMD_RESULT_CANCELLED = 6;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_GENERIC = 0;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_NONE = 1;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT = 2;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_TIMEOUT = 3;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE = 4;
	static constexpr uint16_t ARM_AUTH_DENIED_REASON_BAD_WEATHER = 5;
	static constexpr uint8_t ORB_QUEUE_LENGTH = 4;
#endif // __cplusplus
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using VehicleCommandAck = vehicle_command_ack_s;
	} // namespace msg
} // namespace nextpilot
#endif // __cplusplus

/* register this as object request broker structure */
ORB_DECLARE(vehicle_command_ack);

#ifdef __cplusplus
void print_message(const orb_metadata *meta, const vehicle_command_ack_s& message);
#endif // __cplusplus
