
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\ActionRequest.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define ACTION_REQUEST_ACTION_DISARM 0
#define ACTION_REQUEST_ACTION_ARM 1
#define ACTION_REQUEST_ACTION_TOGGLE_ARMING 2
#define ACTION_REQUEST_ACTION_UNKILL 3
#define ACTION_REQUEST_ACTION_KILL 4
#define ACTION_REQUEST_ACTION_SWITCH_MODE 5
#define ACTION_REQUEST_ACTION_VTOL_TRANSITION_TO_MULTICOPTER 6
#define ACTION_REQUEST_ACTION_VTOL_TRANSITION_TO_FIXEDWING 7
#define ACTION_REQUEST_SOURCE_RC_STICK_GESTURE 0
#define ACTION_REQUEST_SOURCE_RC_SWITCH 1
#define ACTION_REQUEST_SOURCE_RC_BUTTON 2
#define ACTION_REQUEST_SOURCE_RC_MODE_SLOT 3

#endif


#ifdef __cplusplus
struct __EXPORT action_request_s {
#else
struct action_request_s {
#endif
	uint64_t timestamp;
	uint8_t action;
	uint8_t source;
	uint8_t mode;
	uint8_t _padding0[5]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t ACTION_DISARM = 0;
	static constexpr uint8_t ACTION_ARM = 1;
	static constexpr uint8_t ACTION_TOGGLE_ARMING = 2;
	static constexpr uint8_t ACTION_UNKILL = 3;
	static constexpr uint8_t ACTION_KILL = 4;
	static constexpr uint8_t ACTION_SWITCH_MODE = 5;
	static constexpr uint8_t ACTION_VTOL_TRANSITION_TO_MULTICOPTER = 6;
	static constexpr uint8_t ACTION_VTOL_TRANSITION_TO_FIXEDWING = 7;
	static constexpr uint8_t SOURCE_RC_STICK_GESTURE = 0;
	static constexpr uint8_t SOURCE_RC_SWITCH = 1;
	static constexpr uint8_t SOURCE_RC_BUTTON = 2;
	static constexpr uint8_t SOURCE_RC_MODE_SLOT = 3;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using ActionRequest = action_request_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(action_request);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const action_request_s& message);
#endif
