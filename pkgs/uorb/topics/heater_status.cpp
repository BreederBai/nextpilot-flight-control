
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file HeaterStatus.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/heater_status.h>

constexpr char __orb_heater_status_fields[] = "\x89 timestamp;\x88 device_id;\x8a temperature_sensor;\x8a temperature_target;\x88 controller_period_usec;\x88 controller_time_on_usec;\x8a proportional_value;\x8a integrator_value;\x8a feed_forward_value;\x8c heater_on;\x8c temperature_target_met;\x86 mode;\x86[5] _padding0;";

ORB_DEFINE(heater_status, struct heater_status_s, 43, __orb_heater_status_fields, static_cast<uint8_t>(ORB_ID::heater_status));


void print_message(const orb_metadata *meta, const heater_status_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
