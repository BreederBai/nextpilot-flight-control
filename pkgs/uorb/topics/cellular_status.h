
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\CellularStatus.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_UNKNOWN 0
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_FAILED 1
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_INITIALIZING 2
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_LOCKED 3
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_DISABLED 4
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_DISABLING 5
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_ENABLING 6
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_ENABLED 7
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_SEARCHING 8
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_REGISTERED 9
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_DISCONNECTING 10
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_CONNECTING 11
#define CELLULAR_STATUS_CELLULAR_STATUS_FLAG_CONNECTED 12
#define CELLULAR_STATUS_CELLULAR_NETWORK_FAILED_REASON_NONE 0
#define CELLULAR_STATUS_CELLULAR_NETWORK_FAILED_REASON_UNKNOWN 1
#define CELLULAR_STATUS_CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING 2
#define CELLULAR_STATUS_CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR 3

#endif


#ifdef __cplusplus
struct __EXPORT cellular_status_s {
#else
struct cellular_status_s {
#endif
	uint64_t timestamp;
	uint16_t status;
	uint16_t mcc;
	uint16_t mnc;
	uint16_t lac;
	uint8_t failure_reason;
	uint8_t type;
	uint8_t quality;
	uint8_t _padding0[5]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t CELLULAR_STATUS_FLAG_UNKNOWN = 0;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_FAILED = 1;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_INITIALIZING = 2;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_LOCKED = 3;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_DISABLED = 4;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_DISABLING = 5;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_ENABLING = 6;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_ENABLED = 7;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_SEARCHING = 8;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_REGISTERED = 9;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_DISCONNECTING = 10;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_CONNECTING = 11;
	static constexpr uint8_t CELLULAR_STATUS_FLAG_CONNECTED = 12;
	static constexpr uint8_t CELLULAR_NETWORK_FAILED_REASON_NONE = 0;
	static constexpr uint8_t CELLULAR_NETWORK_FAILED_REASON_UNKNOWN = 1;
	static constexpr uint8_t CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING = 2;
	static constexpr uint8_t CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR = 3;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using CellularStatus = cellular_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(cellular_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const cellular_status_s& message);
#endif
