
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\EscStatus.msg */


#pragma once


#include <uORB.h>

#include <uORB/topics/esc_report.h>

#ifndef __cplusplus
#define ESC_STATUS_CONNECTED_ESC_MAX 8
#define ESC_STATUS_ESC_CONNECTION_TYPE_PPM 0
#define ESC_STATUS_ESC_CONNECTION_TYPE_SERIAL 1
#define ESC_STATUS_ESC_CONNECTION_TYPE_ONESHOT 2
#define ESC_STATUS_ESC_CONNECTION_TYPE_I2C 3
#define ESC_STATUS_ESC_CONNECTION_TYPE_CAN 4
#define ESC_STATUS_ESC_CONNECTION_TYPE_DSHOT 5

#endif


#ifdef __cplusplus
struct __EXPORT esc_status_s {
#else
struct esc_status_s {
#endif
	uint64_t timestamp;
	uint16_t counter;
	uint8_t esc_count;
	uint8_t esc_connectiontype;
	uint8_t esc_online_flags;
	uint8_t esc_armed_flags;
	uint8_t _padding0[2]; // required for logger
	struct esc_report_s esc[8];


#ifdef __cplusplus
	static constexpr uint8_t CONNECTED_ESC_MAX = 8;
	static constexpr uint8_t ESC_CONNECTION_TYPE_PPM = 0;
	static constexpr uint8_t ESC_CONNECTION_TYPE_SERIAL = 1;
	static constexpr uint8_t ESC_CONNECTION_TYPE_ONESHOT = 2;
	static constexpr uint8_t ESC_CONNECTION_TYPE_I2C = 3;
	static constexpr uint8_t ESC_CONNECTION_TYPE_CAN = 4;
	static constexpr uint8_t ESC_CONNECTION_TYPE_DSHOT = 5;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using EscStatus = esc_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(esc_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const esc_status_s& message);
#endif
