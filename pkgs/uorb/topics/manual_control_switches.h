
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file ManualControlSwitches.msg */

#pragma once

#include <uORB.h>

#ifndef __cplusplus
#define MANUAL_CONTROL_SWITCHES_SWITCH_POS_NONE 0
#define MANUAL_CONTROL_SWITCHES_SWITCH_POS_ON 1
#define MANUAL_CONTROL_SWITCHES_SWITCH_POS_MIDDLE 2
#define MANUAL_CONTROL_SWITCHES_SWITCH_POS_OFF 3
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_NONE 0
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_1 1
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_2 2
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_3 3
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_4 4
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_5 5
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_6 6
#define MANUAL_CONTROL_SWITCHES_MODE_SLOT_NUM 6
#endif // __cplusplus


#ifdef __cplusplus
struct __EXPORT manual_control_switches_s {
#else
struct manual_control_switches_s {
#endif // __cplusplus
	uint64_t timestamp;
	uint64_t timestamp_sample;
	uint32_t switch_changes;
	uint8_t mode_slot;
	uint8_t arm_switch;
	uint8_t return_switch;
	uint8_t loiter_switch;
	uint8_t offboard_switch;
	uint8_t kill_switch;
	uint8_t gear_switch;
	uint8_t transition_switch;
	uint8_t photo_switch;
	uint8_t video_switch;
	uint8_t engage_main_motor_switch;
	uint8_t _padding0[1]; // required for logger

#ifdef __cplusplus
	static constexpr uint8_t SWITCH_POS_NONE = 0;
	static constexpr uint8_t SWITCH_POS_ON = 1;
	static constexpr uint8_t SWITCH_POS_MIDDLE = 2;
	static constexpr uint8_t SWITCH_POS_OFF = 3;
	static constexpr uint8_t MODE_SLOT_NONE = 0;
	static constexpr uint8_t MODE_SLOT_1 = 1;
	static constexpr uint8_t MODE_SLOT_2 = 2;
	static constexpr uint8_t MODE_SLOT_3 = 3;
	static constexpr uint8_t MODE_SLOT_4 = 4;
	static constexpr uint8_t MODE_SLOT_5 = 5;
	static constexpr uint8_t MODE_SLOT_6 = 6;
	static constexpr uint8_t MODE_SLOT_NUM = 6;
#endif // __cplusplus
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using ManualControlSwitches = manual_control_switches_s;
	} // namespace msg
} // namespace nextpilot
#endif // __cplusplus

/* register this as object request broker structure */
ORB_DECLARE(manual_control_switches);

#ifdef __cplusplus
void print_message(const orb_metadata *meta, const manual_control_switches_s& message);
#endif // __cplusplus
