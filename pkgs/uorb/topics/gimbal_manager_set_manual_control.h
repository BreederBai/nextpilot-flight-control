
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\GimbalManagerSetManualControl.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define GIMBAL_MANAGER_SET_MANUAL_CONTROL_GIMBAL_MANAGER_FLAGS_RETRACT 1
#define GIMBAL_MANAGER_SET_MANUAL_CONTROL_GIMBAL_MANAGER_FLAGS_NEUTRAL 2
#define GIMBAL_MANAGER_SET_MANUAL_CONTROL_GIMBAL_MANAGER_FLAGS_ROLL_LOCK 4
#define GIMBAL_MANAGER_SET_MANUAL_CONTROL_GIMBAL_MANAGER_FLAGS_PITCH_LOCK 8
#define GIMBAL_MANAGER_SET_MANUAL_CONTROL_GIMBAL_MANAGER_FLAGS_YAW_LOCK 16

#endif


#ifdef __cplusplus
struct __EXPORT gimbal_manager_set_manual_control_s {
#else
struct gimbal_manager_set_manual_control_s {
#endif
	uint64_t timestamp;
	uint32_t flags;
	float pitch;
	float yaw;
	float pitch_rate;
	float yaw_rate;
	uint8_t origin_sysid;
	uint8_t origin_compid;
	uint8_t target_system;
	uint8_t target_component;
	uint8_t gimbal_device_id;
	uint8_t _padding0[7]; // required for logger


#ifdef __cplusplus
	static constexpr uint32_t GIMBAL_MANAGER_FLAGS_RETRACT = 1;
	static constexpr uint32_t GIMBAL_MANAGER_FLAGS_NEUTRAL = 2;
	static constexpr uint32_t GIMBAL_MANAGER_FLAGS_ROLL_LOCK = 4;
	static constexpr uint32_t GIMBAL_MANAGER_FLAGS_PITCH_LOCK = 8;
	static constexpr uint32_t GIMBAL_MANAGER_FLAGS_YAW_LOCK = 16;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using GimbalManagerSetManualControl = gimbal_manager_set_manual_control_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(gimbal_manager_set_manual_control);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const gimbal_manager_set_manual_control_s& message);
#endif
