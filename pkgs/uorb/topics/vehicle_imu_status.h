
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\VehicleImuStatus.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus

#endif


#ifdef __cplusplus
struct __EXPORT vehicle_imu_status_s {
#else
struct vehicle_imu_status_s {
#endif
	uint64_t timestamp;
	uint32_t accel_device_id;
	uint32_t gyro_device_id;
	uint32_t accel_clipping[3];
	uint32_t gyro_clipping[3];
	uint32_t accel_error_count;
	uint32_t gyro_error_count;
	float accel_rate_hz;
	float gyro_rate_hz;
	float accel_raw_rate_hz;
	float gyro_raw_rate_hz;
	float accel_vibration_metric;
	float gyro_vibration_metric;
	float delta_angle_coning_metric;
	float mean_accel[3];
	float mean_gyro[3];
	float var_accel[3];
	float var_gyro[3];
	float temperature_accel;
	float temperature_gyro;
	uint8_t _padding0[4]; // required for logger


#ifdef __cplusplus

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using VehicleImuStatus = vehicle_imu_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(vehicle_imu_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const vehicle_imu_status_s& message);
#endif
