
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file MagWorkerData.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define MAG_WORKER_DATA_MAX_MAGS 4

#endif


#ifdef __cplusplus
struct __EXPORT mag_worker_data_s {
#else
struct mag_worker_data_s {
#endif
	uint64_t timestamp;
	uint64_t timestamp_sample;
	uint64_t calibration_interval_perside_us;
	uint32_t done_count;
	uint32_t calibration_points_perside;
	uint32_t calibration_counter_total[4];
	float x[4];
	float y[4];
	float z[4];
	bool side_data_collected[4];
	uint8_t _padding0[4]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t MAX_MAGS = 4;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using MagWorkerData = mag_worker_data_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(mag_worker_data);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const mag_worker_data_s& message);
#endif
