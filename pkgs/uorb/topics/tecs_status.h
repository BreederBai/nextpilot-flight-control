
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\TecsStatus.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define TECS_STATUS_TECS_MODE_NORMAL 0
#define TECS_STATUS_TECS_MODE_UNDERSPEED 1

#endif


#ifdef __cplusplus
struct __EXPORT tecs_status_s {
#else
struct tecs_status_s {
#endif
	uint64_t timestamp;
	float altitude_sp;
	float altitude_reference;
	float height_rate_reference;
	float height_rate_direct;
	float height_rate_setpoint;
	float height_rate;
	float equivalent_airspeed_sp;
	float true_airspeed_sp;
	float true_airspeed_filtered;
	float true_airspeed_derivative_sp;
	float true_airspeed_derivative;
	float true_airspeed_derivative_raw;
	float total_energy_rate_sp;
	float total_energy_rate;
	float total_energy_balance_rate_sp;
	float total_energy_balance_rate;
	float throttle_integ;
	float pitch_integ;
	float throttle_sp;
	float pitch_sp_rad;
	float throttle_trim;
	uint8_t mode;
	uint8_t _padding0[3]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t TECS_MODE_NORMAL = 0;
	static constexpr uint8_t TECS_MODE_UNDERSPEED = 1;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using TecsStatus = tecs_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(tecs_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const tecs_status_s& message);
#endif
