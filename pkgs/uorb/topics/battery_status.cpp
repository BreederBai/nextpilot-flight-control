
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file BatteryStatus.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/battery_status.h>

constexpr char __orb_battery_status_fields[] = "\x89 timestamp;\x8a voltage_v;\x8a voltage_filtered_v;\x8a current_a;\x8a current_filtered_a;\x8a current_average_a;\x8a discharged_mah;\x8a remaining;\x8a scale;\x8a time_remaining_s;\x8a temperature;\x8a[14] voltage_cell_v;\x8a max_cell_voltage_delta;\x88 custom_faults;\x8a average_power;\x8a available_energy;\x8a full_charge_capacity_wh;\x8a remaining_capacity_wh;\x8a design_capacity;\x8a nominal_voltage;\x87 capacity;\x87 cycle_count;\x87 average_time_to_empty;\x87 serial_number;\x87 manufacture_date;\x87 state_of_health;\x87 max_error;\x87 interface_error;\x87 faults;\x87 average_time_to_full;\x87 over_discharge_count;\x8c connected;\x86 cell_count;\x86 source;\x86 priority;\x86 id;\x8c is_powering_off;\x8c is_required;\x86 warning;\x86 mode;\x86[1] _padding0;";

ORB_DEFINE(battery_status, struct battery_status_s, 167, __orb_battery_status_fields, static_cast<uint8_t>(ORB_ID::battery_status));


void print_message(const orb_metadata *meta, const battery_status_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
