
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file UavcanParameterRequest.msg */

#pragma once

#include <uORB.h>

#ifndef __cplusplus
#define UAVCAN_PARAMETER_REQUEST_MESSAGE_TYPE_PARAM_REQUEST_READ 20
#define UAVCAN_PARAMETER_REQUEST_MESSAGE_TYPE_PARAM_REQUEST_LIST 21
#define UAVCAN_PARAMETER_REQUEST_MESSAGE_TYPE_PARAM_SET 23
#define UAVCAN_PARAMETER_REQUEST_NODE_ID_ALL 0
#define UAVCAN_PARAMETER_REQUEST_PARAM_TYPE_UINT8 1
#define UAVCAN_PARAMETER_REQUEST_PARAM_TYPE_INT64 8
#define UAVCAN_PARAMETER_REQUEST_PARAM_TYPE_REAL32 9
#define UAVCAN_PARAMETER_REQUEST_ORB_QUEUE_LENGTH 4
#endif // __cplusplus


#ifdef __cplusplus
struct __EXPORT uavcan_parameter_request_s {
#else
struct uavcan_parameter_request_s {
#endif // __cplusplus
	uint64_t timestamp;
	int64_t int_value;
	float real_value;
	int16_t param_index;
	uint8_t message_type;
	uint8_t node_id;
	char param_id[17];
	uint8_t param_type;
	uint8_t _padding0[6]; // required for logger

#ifdef __cplusplus
	static constexpr uint8_t MESSAGE_TYPE_PARAM_REQUEST_READ = 20;
	static constexpr uint8_t MESSAGE_TYPE_PARAM_REQUEST_LIST = 21;
	static constexpr uint8_t MESSAGE_TYPE_PARAM_SET = 23;
	static constexpr uint8_t NODE_ID_ALL = 0;
	static constexpr uint8_t PARAM_TYPE_UINT8 = 1;
	static constexpr uint8_t PARAM_TYPE_INT64 = 8;
	static constexpr uint8_t PARAM_TYPE_REAL32 = 9;
	static constexpr uint8_t ORB_QUEUE_LENGTH = 4;
#endif // __cplusplus
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using UavcanParameterRequest = uavcan_parameter_request_s;
	} // namespace msg
} // namespace nextpilot
#endif // __cplusplus

/* register this as object request broker structure */
ORB_DECLARE(uavcan_parameter_request);

#ifdef __cplusplus
void print_message(const orb_metadata *meta, const uavcan_parameter_request_s& message);
#endif // __cplusplus
