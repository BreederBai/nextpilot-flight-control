
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\InputRc.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define INPUT_RC_RC_INPUT_SOURCE_UNKNOWN 0
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_PPM 1
#define INPUT_RC_RC_INPUT_SOURCE_PX4IO_PPM 2
#define INPUT_RC_RC_INPUT_SOURCE_PX4IO_SPEKTRUM 3
#define INPUT_RC_RC_INPUT_SOURCE_PX4IO_SBUS 4
#define INPUT_RC_RC_INPUT_SOURCE_PX4IO_ST24 5
#define INPUT_RC_RC_INPUT_SOURCE_MAVLINK 6
#define INPUT_RC_RC_INPUT_SOURCE_QURT 7
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_SPEKTRUM 8
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_SBUS 9
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_ST24 10
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_SUMD 11
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_DSM 12
#define INPUT_RC_RC_INPUT_SOURCE_PX4IO_SUMD 13
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_CRSF 14
#define INPUT_RC_RC_INPUT_SOURCE_PX4FMU_GHST 15
#define INPUT_RC_RC_INPUT_MAX_CHANNELS 18
#define INPUT_RC_RSSI_MAX 100

#endif


#ifdef __cplusplus
struct __EXPORT input_rc_s {
#else
struct input_rc_s {
#endif
	uint64_t timestamp;
	uint64_t timestamp_last_signal;
	int32_t rssi;
	float rssi_dbm;
	uint16_t rc_lost_frame_count;
	uint16_t rc_total_frame_count;
	uint16_t rc_ppm_frame_length;
	uint16_t values[18];
	uint8_t channel_count;
	bool rc_failsafe;
	bool rc_lost;
	uint8_t input_source;
	int8_t link_quality;
	uint8_t _padding0[1]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t RC_INPUT_SOURCE_UNKNOWN = 0;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_PPM = 1;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4IO_PPM = 2;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4IO_SPEKTRUM = 3;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4IO_SBUS = 4;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4IO_ST24 = 5;
	static constexpr uint8_t RC_INPUT_SOURCE_MAVLINK = 6;
	static constexpr uint8_t RC_INPUT_SOURCE_QURT = 7;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_SPEKTRUM = 8;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_SBUS = 9;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_ST24 = 10;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_SUMD = 11;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_DSM = 12;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4IO_SUMD = 13;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_CRSF = 14;
	static constexpr uint8_t RC_INPUT_SOURCE_PX4FMU_GHST = 15;
	static constexpr uint8_t RC_INPUT_MAX_CHANNELS = 18;
	static constexpr int8_t RSSI_MAX = 100;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using InputRc = input_rc_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(input_rc);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const input_rc_s& message);
#endif
