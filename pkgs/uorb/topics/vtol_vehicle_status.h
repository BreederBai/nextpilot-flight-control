
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file VtolVehicleStatus.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define VTOL_VEHICLE_STATUS_VEHICLE_VTOL_STATE_UNDEFINED 0
#define VTOL_VEHICLE_STATUS_VEHICLE_VTOL_STATE_TRANSITION_TO_FW 1
#define VTOL_VEHICLE_STATUS_VEHICLE_VTOL_STATE_TRANSITION_TO_MC 2
#define VTOL_VEHICLE_STATUS_VEHICLE_VTOL_STATE_MC 3
#define VTOL_VEHICLE_STATUS_VEHICLE_VTOL_STATE_FW 4

#endif


#ifdef __cplusplus
struct __EXPORT vtol_vehicle_status_s {
#else
struct vtol_vehicle_status_s {
#endif
	uint64_t timestamp;
	uint8_t vehicle_vtol_state;
	bool fixed_wing_system_failure;
	uint8_t _padding0[6]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t VEHICLE_VTOL_STATE_UNDEFINED = 0;
	static constexpr uint8_t VEHICLE_VTOL_STATE_TRANSITION_TO_FW = 1;
	static constexpr uint8_t VEHICLE_VTOL_STATE_TRANSITION_TO_MC = 2;
	static constexpr uint8_t VEHICLE_VTOL_STATE_MC = 3;
	static constexpr uint8_t VEHICLE_VTOL_STATE_FW = 4;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using VtolVehicleStatus = vtol_vehicle_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(vtol_vehicle_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const vtol_vehicle_status_s& message);
#endif
