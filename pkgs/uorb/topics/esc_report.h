
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\EscReport.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define ESC_REPORT_FAILURE_OVER_CURRENT 0
#define ESC_REPORT_FAILURE_OVER_VOLTAGE 1
#define ESC_REPORT_FAILURE_MOTOR_OVER_TEMPERATURE 2
#define ESC_REPORT_FAILURE_OVER_RPM 3
#define ESC_REPORT_FAILURE_INCONSISTENT_CMD 4
#define ESC_REPORT_FAILURE_MOTOR_STUCK 5
#define ESC_REPORT_FAILURE_GENERIC 6
#define ESC_REPORT_FAILURE_MOTOR_WARN_TEMPERATURE 7
#define ESC_REPORT_FAILURE_WARN_ESC_TEMPERATURE 8
#define ESC_REPORT_FAILURE_OVER_ESC_TEMPERATURE 9
#define ESC_REPORT_ESC_FAILURE_COUNT 10

#endif


#ifdef __cplusplus
struct __EXPORT esc_report_s {
#else
struct esc_report_s {
#endif
	uint64_t timestamp;
	uint32_t esc_errorcount;
	int32_t esc_rpm;
	float esc_voltage;
	float esc_current;
	float esc_temperature;
	uint16_t failures;
	uint8_t esc_address;
	uint8_t esc_cmdcount;
	uint8_t esc_state;
	uint8_t actuator_function;
	int8_t esc_power;
	uint8_t _padding0[5]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t FAILURE_OVER_CURRENT = 0;
	static constexpr uint8_t FAILURE_OVER_VOLTAGE = 1;
	static constexpr uint8_t FAILURE_MOTOR_OVER_TEMPERATURE = 2;
	static constexpr uint8_t FAILURE_OVER_RPM = 3;
	static constexpr uint8_t FAILURE_INCONSISTENT_CMD = 4;
	static constexpr uint8_t FAILURE_MOTOR_STUCK = 5;
	static constexpr uint8_t FAILURE_GENERIC = 6;
	static constexpr uint8_t FAILURE_MOTOR_WARN_TEMPERATURE = 7;
	static constexpr uint8_t FAILURE_WARN_ESC_TEMPERATURE = 8;
	static constexpr uint8_t FAILURE_OVER_ESC_TEMPERATURE = 9;
	static constexpr uint8_t ESC_FAILURE_COUNT = 10;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using EscReport = esc_report_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(esc_report);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const esc_report_s& message);
#endif
