
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file EstimatorGpsStatus.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/estimator_gps_status.h>

constexpr char __orb_estimator_gps_status_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x8a position_drift_rate_horizontal_m_s;\x8a position_drift_rate_vertical_m_s;\x8a filtered_horizontal_speed_m_s;\x8c checks_passed;\x8c check_fail_gps_fix;\x8c check_fail_min_sat_count;\x8c check_fail_max_pdop;\x8c check_fail_max_horz_err;\x8c check_fail_max_vert_err;\x8c check_fail_max_spd_err;\x8c check_fail_max_horz_drift;\x8c check_fail_max_vert_drift;\x8c check_fail_max_horz_spd_err;\x8c check_fail_max_vert_spd_err;\x86[1] _padding0;";

ORB_DEFINE(estimator_gps_status, struct estimator_gps_status_s, 39, __orb_estimator_gps_status_fields, static_cast<uint8_t>(ORB_ID::estimator_gps_status));


void print_message(const orb_metadata *meta, const estimator_gps_status_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
