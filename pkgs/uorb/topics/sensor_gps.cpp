
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\SensorGps.msg */


#include <rtdbg.h>
#include <inttypes.h>
//#include <px4_platform_common/log.h>
//#include <px4_platform_common/defines.h>
#include <topics/sensor_gps.h>
#include <topics/uORBTopics.hpp>
#include <hrtimer.h>
//#include <lib/drivers/device/Device.hpp>
//#include <lib/matrix/matrix/math.hpp>
//#include <lib/mathlib/mathlib.h>

constexpr char __orb_sensor_gps_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x89 time_utc_usec;\x88 device_id;\x84 lat;\x84 lon;\x84 alt;\x84 alt_ellipsoid;\x8a s_variance_m_s;\x8a c_variance_rad;\x8a eph;\x8a epv;\x8a hdop;\x8a vdop;\x84 noise_per_ms;\x84 jamming_indicator;\x8a vel_m_s;\x8a vel_n_m_s;\x8a vel_e_m_s;\x8a vel_d_m_s;\x8a cog_rad;\x84 timestamp_time_relative;\x8a heading;\x8a heading_offset;\x8a heading_accuracy;\x8a rtcm_injection_rate;\x87 automatic_gain_control;\x86 fix_type;\x86 jamming_state;\x86 spoofing_state;\x8c vel_ned_valid;\x86 satellites_used;\x86 selected_rtcm_instance;\x86[4] _padding0;";

ORB_DEFINE(sensor_gps, struct sensor_gps_s, 124, __orb_sensor_gps_fields, static_cast<uint8_t>(ORB_ID::sensor_gps));
ORB_DEFINE(vehicle_gps_position, struct sensor_gps_s, 124, __orb_sensor_gps_fields, static_cast<uint8_t>(ORB_ID::vehicle_gps_position));


void print_message(const orb_metadata *meta, const sensor_gps_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
