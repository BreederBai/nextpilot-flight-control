
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file SensorGyroFft.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/sensor_gyro_fft.h>

constexpr char __orb_sensor_gyro_fft_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x88 device_id;\x8a sensor_sample_rate_hz;\x8a resolution_hz;\x8a[3] peak_frequencies_x;\x8a[3] peak_frequencies_y;\x8a[3] peak_frequencies_z;\x8a[3] peak_snr_x;\x8a[3] peak_snr_y;\x8a[3] peak_snr_z;\x86[4] _padding0;";

ORB_DEFINE(sensor_gyro_fft, struct sensor_gyro_fft_s, 100, __orb_sensor_gyro_fft_fields, static_cast<uint8_t>(ORB_ID::sensor_gyro_fft));


void print_message(const orb_metadata *meta, const sensor_gyro_fft_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
