
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file D:\nextpilot\nextpilot-flight-control-public\msgs\uorb_msgs\TakeoffStatus.msg */


#pragma once


#include <uORB.h>


#ifndef __cplusplus
#define TAKEOFF_STATUS_TAKEOFF_STATE_UNINITIALIZED 0
#define TAKEOFF_STATUS_TAKEOFF_STATE_DISARMED 1
#define TAKEOFF_STATUS_TAKEOFF_STATE_SPOOLUP 2
#define TAKEOFF_STATUS_TAKEOFF_STATE_READY_FOR_TAKEOFF 3
#define TAKEOFF_STATUS_TAKEOFF_STATE_RAMPUP 4
#define TAKEOFF_STATUS_TAKEOFF_STATE_FLIGHT 5

#endif


#ifdef __cplusplus
struct __EXPORT takeoff_status_s {
#else
struct takeoff_status_s {
#endif
	uint64_t timestamp;
	float tilt_limit;
	uint8_t takeoff_state;
	uint8_t _padding0[3]; // required for logger


#ifdef __cplusplus
	static constexpr uint8_t TAKEOFF_STATE_UNINITIALIZED = 0;
	static constexpr uint8_t TAKEOFF_STATE_DISARMED = 1;
	static constexpr uint8_t TAKEOFF_STATE_SPOOLUP = 2;
	static constexpr uint8_t TAKEOFF_STATE_READY_FOR_TAKEOFF = 3;
	static constexpr uint8_t TAKEOFF_STATE_RAMPUP = 4;
	static constexpr uint8_t TAKEOFF_STATE_FLIGHT = 5;

#endif
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using TakeoffStatus = takeoff_status_s;
	} // namespace msg
} // namespace nextpilot
#endif

/* register this as object request broker structure */
ORB_DECLARE(takeoff_status);


#ifdef __cplusplus
void print_message(const orb_metadata *meta, const takeoff_status_s& message);
#endif
