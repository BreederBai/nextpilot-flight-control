

#include <math.h> // NAN

#include <stdint.h>
#include <parameters/param.h>

// DO NOT EDIT
// This file is autogenerated from parameters.xml

namespace namespace::params { 

/// Enum with all parameters
enum class params : uint16_t {
	CBRK_AIRSPD_CHK,
	CBRK_BUZZER,
	CBRK_FLIGHTTERM,
	CBRK_IO_SAFETY,
	CBRK_SUPPLY_CHK,
	CBRK_USB_CHK,
	CBRK_VTOLARMING,
	MC_ACRO_EXPO,
	MC_ACRO_EXPO_Y,
	MC_ACRO_P_MAX,
	MC_ACRO_R_MAX,
	MC_ACRO_SUPEXPO,
	MC_ACRO_SUPEXPOY,
	MC_ACRO_Y_MAX,
	MC_BAT_SCALE_EN,
	MC_PITCHRATE_D,
	MC_PITCHRATE_FF,
	MC_PITCHRATE_I,
	MC_PITCHRATE_K,
	MC_PITCHRATE_P,
	MC_PR_INT_LIM,
	MC_ROLLRATE_D,
	MC_ROLLRATE_FF,
	MC_ROLLRATE_I,
	MC_ROLLRATE_K,
	MC_ROLLRATE_P,
	MC_RR_INT_LIM,
	MC_YAWRATE_D,
	MC_YAWRATE_FF,
	MC_YAWRATE_I,
	MC_YAWRATE_K,
	MC_YAWRATE_P,
	MC_YR_INT_LIM,
};

static constexpr param_info_s parameters_meta[] = {
	{
		.name = "CBRK_AIRSPD_CHK",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 0},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_BUZZER",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 0},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_FLIGHTTERM",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 121212},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_IO_SAFETY",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 22027},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_SUPPLY_CHK",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 0},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_USB_CHK",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 197848},
		.flag = { .value = 0 },
	},
	{
		.name = "CBRK_VTOLARMING",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 0},
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_EXPO",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.69 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_EXPO_Y",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.69 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_P_MAX",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 720.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_R_MAX",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 720.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_SUPEXPO",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.7 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_SUPEXPOY",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.7 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ACRO_Y_MAX",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 540.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_BAT_SCALE_EN",
		.type = PARAM_TYPE_INT32,
		.value = { .i = 0},
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PITCHRATE_D",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.003 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PITCHRATE_FF",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PITCHRATE_I",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.2 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PITCHRATE_K",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 1.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PITCHRATE_P",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.15 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_PR_INT_LIM",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.30 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ROLLRATE_D",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.003 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ROLLRATE_FF",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ROLLRATE_I",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.2 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ROLLRATE_K",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 1.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_ROLLRATE_P",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.15 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_RR_INT_LIM",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.30 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YAWRATE_D",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YAWRATE_FF",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YAWRATE_I",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.1 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YAWRATE_K",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 1.0 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YAWRATE_P",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.2 },
		.flag = { .value = 0 },
	},
	{
		.name = "MC_YR_INT_LIM",
		.type = PARAM_TYPE_FLOAT,
		.value = { .f = 0.30 },
		.flag = { .value = 0 },
	},
};

static constexpr param_type_t parameters_type[] = {
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_INT32,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_INT32,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
	PARAM_TYPE_FLOAT,
};

static constexpr params parameters_volatile[] = {
};


} // namespace nextpilot::params