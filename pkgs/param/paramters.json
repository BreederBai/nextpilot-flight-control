{
  "parameters": [
    {
      "category": "Standard",
      "default": 75,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Speed controller bandwidth, in Hz. Higher values result in faster speed and current rise times, but may result in overshoot and higher current consumption. For fixed-wing aircraft, this value should be less than 50 Hz; for multirotors, values up to 100 Hz may provide improvements in responsiveness.",
      "max": 250,
      "min": 10,
      "name": "ctl_bw",
      "shortDesc": "Speed controller bandwidth",
      "type": "Int32",
      "units": "Hz"
    },
    {
      "category": "Standard",
      "default": 1,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Motor spin direction as detected during initial enumeration. Use 0 or 1 to reverse direction.",
      "max": 1,
      "min": 0,
      "name": "ctl_dir",
      "shortDesc": "Reverse direction",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 1.0,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Speed (RPM) controller gain. Determines controller\n            aggressiveness; units are amp-seconds per radian. Systems with\n            higher rotational inertia (large props) will need gain increased;\n            systems with low rotational inertia (small props) may need gain\n            decreased. Higher values result in faster response, but may result\n            in oscillation and excessive overshoot. Lower values result in a\n            slower, smoother response.",
      "max": 1.0,
      "min": 0.0,
      "name": "ctl_gain",
      "shortDesc": "Speed (RPM) controller gain",
      "type": "Float",
      "units": "C/rad"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 3.5,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Idle speed (e Hz)",
      "max": 100.0,
      "min": 0.0,
      "name": "ctl_hz_idle",
      "shortDesc": "Idle speed (e Hz)",
      "type": "Float",
      "units": "Hz"
    },
    {
      "category": "Standard",
      "default": 25,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Spin-up rate (e Hz/s)",
      "max": 1000,
      "min": 5,
      "name": "ctl_start_rate",
      "shortDesc": "Spin-up rate (e Hz/s)",
      "type": "Int32",
      "units": "1/s^2"
    },
    {
      "category": "Standard",
      "default": 0,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Index of this ESC in throttle command messages.",
      "max": 15,
      "min": 0,
      "name": "esc_index",
      "shortDesc": "Index of this ESC in throttle command messages.",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "default": 20034,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Extended status ID",
      "max": 1000000,
      "min": 1,
      "name": "id_ext_status",
      "shortDesc": "Extended status ID",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "default": 50000,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Extended status interval (\u00b5s)",
      "max": 1000000,
      "min": 0,
      "name": "int_ext_status",
      "shortDesc": "Extended status interval (\u00b5s)",
      "type": "Int32",
      "units": "us"
    },
    {
      "category": "Standard",
      "default": 50000,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "ESC status interval (\u00b5s)",
      "max": 1000000,
      "name": "int_status",
      "shortDesc": "ESC status interval (\u00b5s)",
      "type": "Int32",
      "units": "us"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 12.0,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Motor current limit in amps. This determines the maximum\n            current controller setpoint, as well as the maximum allowable\n            current setpoint slew rate. This value should generally be set to\n            the continuous current rating listed in the motor\u2019s specification\n            sheet, or set equal to the motor\u2019s specified continuous power\n            divided by the motor voltage limit.",
      "max": 80.0,
      "min": 1.0,
      "name": "mot_i_max",
      "shortDesc": "Motor current limit in amps",
      "type": "Float",
      "units": "A"
    },
    {
      "category": "Standard",
      "default": 2300,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Motor Kv in RPM per volt. This can be taken from the motor\u2019s\n            specification sheet; accuracy will help control performance but\n            some deviation from the specified value is acceptable.",
      "max": 4000,
      "min": 0,
      "name": "mot_kv",
      "shortDesc": "Motor Kv in RPM per volt",
      "type": "Int32",
      "units": "rpm/V"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.0,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "READ ONLY: Motor inductance in henries. This is measured on start-up.",
      "name": "mot_ls",
      "shortDesc": "READ ONLY: Motor inductance in henries.",
      "type": "Float",
      "units": "H"
    },
    {
      "category": "Standard",
      "default": 14,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Number of motor poles. Used to convert mechanical speeds to\n            electrical speeds. This number should be taken from the motor\u2019s\n            specification sheet.",
      "max": 40,
      "min": 2,
      "name": "mot_num_poles",
      "shortDesc": "Number of motor poles.",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.0,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "READ ONLY: Motor resistance in ohms. This is measured on start-up. When\n            tuning a new motor, check that this value is approximately equal\n            to the value shown in the motor\u2019s specification sheet.",
      "name": "mot_rs",
      "shortDesc": "READ ONLY: Motor resistance in ohms",
      "type": "Float",
      "units": "Ohm"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.5,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Acceleration limit (V)",
      "max": 1.0,
      "min": 0.01,
      "name": "mot_v_accel",
      "shortDesc": "Acceleration limit (V)",
      "type": "Float",
      "units": "V"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 14.8,
      "group": "UAVCAN Motor Parameters",
      "longDesc": "Motor voltage limit in volts. The current controller\u2019s\n            commanded voltage will never exceed this value. Note that this may\n            safely be above the nominal voltage of the motor; to determine the\n            actual motor voltage limit, divide the motor\u2019s rated power by the\n            motor current limit.",
      "min": 0.0,
      "name": "mot_v_max",
      "shortDesc": "Motor voltage limit in volts",
      "type": "Float",
      "units": "V"
    },
    {
      "category": "Standard",
      "default": 2,
      "group": "UAVCAN GNSS",
      "longDesc": "Dynamic model used in the GNSS positioning engine. 0 \u2013\n        Automotive, 1 \u2013 Sea, 2 \u2013 Airborne.\n      ",
      "max": 2,
      "min": 0,
      "name": "gnss.dyn_model",
      "shortDesc": "GNSS dynamic model",
      "type": "Int32",
      "values": [
        {
          "description": "Automotive",
          "value": 0
        },
        {
          "description": "Sea",
          "value": 1
        },
        {
          "description": "Airborne",
          "value": 2
        }
      ]
    },
    {
      "category": "Standard",
      "default": 1,
      "group": "UAVCAN GNSS",
      "longDesc": "Broadcast the old (deprecated) GNSS fix message\n        uavcan.equipment.gnss.Fix alongside the new alternative\n        uavcan.equipment.gnss.Fix2. It is recommended to\n        disable this feature to reduce the CAN bus traffic.\n      ",
      "max": 1,
      "min": 0,
      "name": "gnss.old_fix_msg",
      "shortDesc": "Broadcast old GNSS fix message",
      "type": "Int32",
      "values": [
        {
          "description": "Fix2",
          "value": 0
        },
        {
          "description": "Fix and Fix2",
          "value": 1
        }
      ]
    },
    {
      "category": "Standard",
      "default": 0,
      "group": "UAVCAN GNSS",
      "longDesc": "Set the device health to Warning if the dimensionality of\n              the GNSS solution is less than this value. 3 for the full (3D)\n              solution, 2 for planar (2D) solution, 1 for time-only solution,\n              0 disables the feature.\n      ",
      "max": 3,
      "min": 0,
      "name": "gnss.warn_dimens",
      "shortDesc": "device health warning",
      "type": "Int32",
      "values": [
        {
          "description": "disables the feature",
          "value": 0
        },
        {
          "description": "time-only solution",
          "value": 1
        },
        {
          "description": "planar (2D) solution",
          "value": 2
        },
        {
          "description": "full (3D) solution",
          "value": 3
        }
      ]
    },
    {
      "category": "Standard",
      "default": 0,
      "group": "UAVCAN GNSS",
      "longDesc": "Set the device health to Warning if the number of satellites\n        used in the GNSS solution is below this threshold. Zero\n        disables the feature\n      ",
      "name": "gnss.warn_sats",
      "shortDesc": "",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "default": 0,
      "group": "UAVCAN GNSS",
      "longDesc": "Set the device health to Warning if the number of satellites\n        used in the GNSS solution is below this threshold. Zero\n        disables the feature\n      ",
      "max": 1000000,
      "min": 0,
      "name": "uavcan.pubp-pres",
      "shortDesc": "",
      "type": "Int32",
      "units": "us"
    },
    {
      "category": "Developer",
      "default": 0,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 162128 will disable the check for an airspeed sensor. The sensor driver will not be started and it cannot be calibrated. WARNING: ENABLING THIS CIRCUIT BREAKER IS AT OWN RISK",
      "max": 162128,
      "min": 0,
      "name": "CBRK_AIRSPD_CHK",
      "rebootRequired": true,
      "shortDesc": "Circuit breaker for airspeed sensor",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 0,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 782097 will disable the buzzer audio notification. Setting this parameter to 782090 will disable the startup tune, while keeping all others enabled.",
      "max": 782097,
      "min": 0,
      "name": "CBRK_BUZZER",
      "rebootRequired": true,
      "shortDesc": "Circuit breaker for disabling buzzer",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 121212,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 121212 will disable the flight termination action if triggered by the FailureDetector logic or if FMU is lost. This circuit breaker does not affect the RC loss, data link loss, geofence, and takeoff failure detection safety logic.",
      "max": 121212,
      "min": 0,
      "name": "CBRK_FLIGHTTERM",
      "rebootRequired": true,
      "shortDesc": "Circuit breaker for flight termination",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 22027,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 22027 will disable IO safety. WARNING: ENABLING THIS CIRCUIT BREAKER IS AT OWN RISK",
      "max": 22027,
      "min": 0,
      "name": "CBRK_IO_SAFETY",
      "shortDesc": "Circuit breaker for IO safety",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 0,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 894281 will disable the power valid checks in the commander. WARNING: ENABLING THIS CIRCUIT BREAKER IS AT OWN RISK",
      "max": 894281,
      "min": 0,
      "name": "CBRK_SUPPLY_CHK",
      "shortDesc": "Circuit breaker for power supply check",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 197848,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 197848 will disable the USB connected checks in the commander, setting it to 0 keeps them enabled (recommended). We are generally recommending to not fly with the USB link connected and production vehicles should set this parameter to zero to prevent users from flying USB powered. However, for R&D purposes it has proven over the years to work just fine.",
      "max": 197848,
      "min": 0,
      "name": "CBRK_USB_CHK",
      "shortDesc": "Circuit breaker for USB link check",
      "type": "Int32"
    },
    {
      "category": "Developer",
      "default": 0,
      "group": "Circuit Breaker",
      "longDesc": "Setting this parameter to 159753 will enable arming in fixed-wing mode for VTOLs. WARNING: ENABLING THIS CIRCUIT BREAKER IS AT OWN RISK",
      "max": 159753,
      "min": 0,
      "name": "CBRK_VTOLARMING",
      "shortDesc": "Circuit breaker for arming in fixed-wing mode check",
      "type": "Int32"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.69,
      "group": "Multicopter Rate Control",
      "longDesc": "Exponential factor for tuning the input curve shape. 0 Purely linear input curve 1 Purely cubic input curve",
      "max": 1.0,
      "min": 0.0,
      "name": "MC_ACRO_EXPO",
      "shortDesc": "Acro mode Expo factor for Roll and Pitch",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.69,
      "group": "Multicopter Rate Control",
      "longDesc": "Exponential factor for tuning the input curve shape. 0 Purely linear input curve 1 Purely cubic input curve",
      "max": 1.0,
      "min": 0.0,
      "name": "MC_ACRO_EXPO_Y",
      "shortDesc": "Acro mode Expo factor for Yaw",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 1,
      "default": 720.0,
      "group": "Multicopter Rate Control",
      "increment": 5.0,
      "longDesc": "default: 2 turns per second",
      "max": 1800.0,
      "min": 0.0,
      "name": "MC_ACRO_P_MAX",
      "shortDesc": "Max acro pitch rate",
      "type": "Float",
      "units": "deg/s"
    },
    {
      "category": "Standard",
      "decimalPlaces": 1,
      "default": 720.0,
      "group": "Multicopter Rate Control",
      "increment": 5.0,
      "longDesc": "default: 2 turns per second",
      "max": 1800.0,
      "min": 0.0,
      "name": "MC_ACRO_R_MAX",
      "shortDesc": "Max acro roll rate",
      "type": "Float",
      "units": "deg/s"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.7,
      "group": "Multicopter Rate Control",
      "longDesc": "SuperExpo factor for refining the input curve shape tuned using MC_ACRO_EXPO. 0 Pure Expo function 0.7 reasonable shape enhancement for intuitive stick feel 0.95 very strong bent input curve only near maxima have effect",
      "max": 0.95,
      "min": 0.0,
      "name": "MC_ACRO_SUPEXPO",
      "shortDesc": "Acro mode SuperExpo factor for Roll and Pitch",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.7,
      "group": "Multicopter Rate Control",
      "longDesc": "SuperExpo factor for refining the input curve shape tuned using MC_ACRO_EXPO_Y. 0 Pure Expo function 0.7 reasonable shape enhancement for intuitive stick feel 0.95 very strong bent input curve only near maxima have effect",
      "max": 0.95,
      "min": 0.0,
      "name": "MC_ACRO_SUPEXPOY",
      "shortDesc": "Acro mode SuperExpo factor for Yaw",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 1,
      "default": 540.0,
      "group": "Multicopter Rate Control",
      "increment": 5.0,
      "longDesc": "default 1.5 turns per second",
      "max": 1800.0,
      "min": 0.0,
      "name": "MC_ACRO_Y_MAX",
      "shortDesc": "Max acro yaw rate",
      "type": "Float",
      "units": "deg/s"
    },
    {
      "category": "Standard",
      "default": 0,
      "group": "Multicopter Rate Control",
      "longDesc": "This compensates for voltage drop of the battery over time by attempting to normalize performance across the operating range of the battery. The copter should constantly behave as if it was fully charged with reduced max acceleration at lower battery percentages. i.e. if hover is at 0.5 throttle at 100% battery, it will still be 0.5 at 60% battery.",
      "name": "MC_BAT_SCALE_EN",
      "shortDesc": "Battery power level scaler",
      "type": "Int32",
      "values": [
        {
          "description": "Disabled",
          "value": 0
        },
        {
          "description": "Enabled",
          "value": 1
        }
      ]
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 0.003,
      "group": "Multicopter Rate Control",
      "increment": 0.0005,
      "longDesc": "Pitch rate differential gain. Small values help reduce fast oscillations. If value is too big oscillations will appear again.",
      "min": 0.0,
      "name": "MC_PITCHRATE_D",
      "shortDesc": "Pitch rate D gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 0.0,
      "group": "Multicopter Rate Control",
      "longDesc": "Improves tracking performance.",
      "min": 0.0,
      "name": "MC_PITCHRATE_FF",
      "shortDesc": "Pitch rate feedforward",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.2,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Pitch rate integral gain. Can be set to compensate static thrust difference or gravity center offset.",
      "min": 0.0,
      "name": "MC_PITCHRATE_I",
      "shortDesc": "Pitch rate I gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 1.0,
      "group": "Multicopter Rate Control",
      "increment": 0.0005,
      "longDesc": "Global gain of the controller. This gain scales the P, I and D terms of the controller: output = MC_PITCHRATE_K * (MC_PITCHRATE_P * error + MC_PITCHRATE_I * error_integral + MC_PITCHRATE_D * error_derivative) Set MC_PITCHRATE_P=1 to implement a PID in the ideal form. Set MC_PITCHRATE_K=1 to implement a PID in the parallel form.",
      "max": 5.0,
      "min": 0.01,
      "name": "MC_PITCHRATE_K",
      "shortDesc": "Pitch rate controller gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.15,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Pitch rate proportional gain, i.e. control output for angular speed error 1 rad/s.",
      "max": 0.6,
      "min": 0.01,
      "name": "MC_PITCHRATE_P",
      "shortDesc": "Pitch rate P gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.3,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Pitch rate integrator limit. Can be set to increase the amount of integrator available to counteract disturbances or reduced to improve settling time after large pitch moment trim changes.",
      "min": 0.0,
      "name": "MC_PR_INT_LIM",
      "shortDesc": "Pitch rate integrator limit",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 0.003,
      "group": "Multicopter Rate Control",
      "increment": 0.0005,
      "longDesc": "Roll rate differential gain. Small values help reduce fast oscillations. If value is too big oscillations will appear again.",
      "max": 0.01,
      "min": 0.0,
      "name": "MC_ROLLRATE_D",
      "shortDesc": "Roll rate D gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 0.0,
      "group": "Multicopter Rate Control",
      "longDesc": "Improves tracking performance.",
      "min": 0.0,
      "name": "MC_ROLLRATE_FF",
      "shortDesc": "Roll rate feedforward",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.2,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Roll rate integral gain. Can be set to compensate static thrust difference or gravity center offset.",
      "min": 0.0,
      "name": "MC_ROLLRATE_I",
      "shortDesc": "Roll rate I gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 1.0,
      "group": "Multicopter Rate Control",
      "increment": 0.0005,
      "longDesc": "Global gain of the controller. This gain scales the P, I and D terms of the controller: output = MC_ROLLRATE_K * (MC_ROLLRATE_P * error + MC_ROLLRATE_I * error_integral + MC_ROLLRATE_D * error_derivative) Set MC_ROLLRATE_P=1 to implement a PID in the ideal form. Set MC_ROLLRATE_K=1 to implement a PID in the parallel form.",
      "max": 5.0,
      "min": 0.01,
      "name": "MC_ROLLRATE_K",
      "shortDesc": "Roll rate controller gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 3,
      "default": 0.15,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Roll rate proportional gain, i.e. control output for angular speed error 1 rad/s.",
      "max": 0.5,
      "min": 0.01,
      "name": "MC_ROLLRATE_P",
      "shortDesc": "Roll rate P gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.3,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Roll rate integrator limit. Can be set to increase the amount of integrator available to counteract disturbances or reduced to improve settling time after large roll moment trim changes.",
      "min": 0.0,
      "name": "MC_RR_INT_LIM",
      "shortDesc": "Roll rate integrator limit",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.0,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Yaw rate differential gain. Small values help reduce fast oscillations. If value is too big oscillations will appear again.",
      "min": 0.0,
      "name": "MC_YAWRATE_D",
      "shortDesc": "Yaw rate D gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 0.0,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Improves tracking performance.",
      "min": 0.0,
      "name": "MC_YAWRATE_FF",
      "shortDesc": "Yaw rate feedforward",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.1,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Yaw rate integral gain. Can be set to compensate static thrust difference or gravity center offset.",
      "min": 0.0,
      "name": "MC_YAWRATE_I",
      "shortDesc": "Yaw rate I gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 4,
      "default": 1.0,
      "group": "Multicopter Rate Control",
      "increment": 0.0005,
      "longDesc": "Global gain of the controller. This gain scales the P, I and D terms of the controller: output = MC_YAWRATE_K * (MC_YAWRATE_P * error + MC_YAWRATE_I * error_integral + MC_YAWRATE_D * error_derivative) Set MC_YAWRATE_P=1 to implement a PID in the ideal form. Set MC_YAWRATE_K=1 to implement a PID in the parallel form.",
      "max": 5.0,
      "min": 0.0,
      "name": "MC_YAWRATE_K",
      "shortDesc": "Yaw rate controller gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.2,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Yaw rate proportional gain, i.e. control output for angular speed error 1 rad/s.",
      "max": 0.6,
      "min": 0.0,
      "name": "MC_YAWRATE_P",
      "shortDesc": "Yaw rate P gain",
      "type": "Float"
    },
    {
      "category": "Standard",
      "decimalPlaces": 2,
      "default": 0.3,
      "group": "Multicopter Rate Control",
      "increment": 0.01,
      "longDesc": "Yaw rate integrator limit. Can be set to increase the amount of integrator available to counteract disturbances or reduced to improve settling time after large yaw moment trim changes.",
      "min": 0.0,
      "name": "MC_YR_INT_LIM",
      "shortDesc": "Yaw rate integrator limit",
      "type": "Float"
    }
  ],
  "translation": {
    "items": {
      "parameters": {
        "list": {
          "items": {
            "bitmask": {
              "list": {
                "key": "index",
                "translate": [
                  "description"
                ]
              }
            },
            "values": {
              "list": {
                "key": "value",
                "translate": [
                  "description"
                ]
              }
            }
          },
          "key": "name",
          "translate": [
            "shortDesc",
            "longDesc"
          ],
          "translate-global": [
            "category",
            "group"
          ]
        }
      }
    }
  },
  "version": 1
}