
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file FailsafeFlags.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/failsafe_flags.h>

constexpr char __orb_failsafe_flags_fields[] = "\x89 timestamp;\x88 mode_req_angular_velocity;\x88 mode_req_attitude;\x88 mode_req_local_alt;\x88 mode_req_local_position;\x88 mode_req_local_position_relaxed;\x88 mode_req_global_position;\x88 mode_req_mission;\x88 mode_req_offboard_signal;\x88 mode_req_home_position;\x88 mode_req_wind_and_flight_time_compliance;\x88 mode_req_prevent_arming;\x88 mode_req_manual_control;\x88 mode_req_other;\x8c angular_velocity_invalid;\x8c attitude_invalid;\x8c local_altitude_invalid;\x8c local_position_invalid;\x8c local_position_invalid_relaxed;\x8c local_velocity_invalid;\x8c global_position_invalid;\x8c auto_mission_missing;\x8c offboard_control_signal_lost;\x8c home_position_invalid;\x8c manual_control_signal_lost;\x8c gcs_connection_lost;\x86 battery_warning;\x8c battery_low_remaining_time;\x8c battery_unhealthy;\x8c primary_geofence_breached;\x8c mission_failure;\x8c vtol_fixed_wing_system_failure;\x8c wind_limit_exceeded;\x8c flight_time_limit_exceeded;\x8c local_position_accuracy_low;\x8c fd_critical_failure;\x8c fd_esc_arming_failure;\x8c fd_imbalanced_prop;\x8c fd_motor_failure;\x86[3] _padding0;";

ORB_DEFINE(failsafe_flags, struct failsafe_flags_s, 85, __orb_failsafe_flags_fields, static_cast<uint8_t>(ORB_ID::failsafe_flags));


void print_message(const orb_metadata *meta, const failsafe_flags_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
