
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file SensorUwb.msg */

#pragma once

#include <uORB.h>

#ifndef __cplusplus
#endif // __cplusplus


#ifdef __cplusplus
struct __EXPORT sensor_uwb_s {
#else
struct sensor_uwb_s {
#endif // __cplusplus
	uint64_t timestamp;
	uint32_t sessionid;
	uint32_t time_offset;
	uint32_t counter;
	float distance;
	float aoa_azimuth_dev;
	float aoa_elevation_dev;
	float aoa_azimuth_resp;
	float aoa_elevation_resp;
	float offset_x;
	float offset_y;
	float offset_z;
	uint16_t mac;
	uint16_t mac_dest;
	uint16_t status;
	uint8_t nlos;
	uint8_t aoa_azimuth_fom;
	uint8_t aoa_elevation_fom;
	uint8_t aoa_dest_azimuth_fom;
	uint8_t aoa_dest_elevation_fom;
	uint8_t orientation;

#ifdef __cplusplus
#endif // __cplusplus
};

#ifdef __cplusplus
namespace nextpilot {
	namespace msg {
		using SensorUwb = sensor_uwb_s;
	} // namespace msg
} // namespace nextpilot
#endif // __cplusplus

/* register this as object request broker structure */
ORB_DECLARE(sensor_uwb);

#ifdef __cplusplus
void print_message(const orb_metadata *meta, const sensor_uwb_s& message);
#endif // __cplusplus
