
/*****************************************************************
 *     _   __             __   ____   _  __        __
 *    / | / /___   _  __ / /_ / __ \ (_)/ /____   / /_
 *   /  |/ // _ \ | |/_// __// /_/ // // // __ \ / __/
 *  / /|  //  __/_>  < / /_ / ____// // // /_/ // /_
 * /_/ |_/ \___//_/|_| \__//_/    /_//_/ \____/ \__/
 *
 * Copyright All Reserved Â© 2015-2024 NextPilot Development Team
 ******************************************************************/

/* Auto-generated by genmsg_cpp from file EstimatorAidSource1d.msg */


#include <rtdbg.h>
#include <inttypes.h>
#include <hrtimer.h>
#include <topics/uORBTopics.hpp>
#include <topics/estimator_aid_source1d.h>

constexpr char __orb_estimator_aid_source1d_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x89 time_last_fuse;\x88 device_id;\x8a observation;\x8a observation_variance;\x8a innovation;\x8a innovation_variance;\x8a test_ratio;\x86 estimator_instance;\x8c fusion_enabled;\x8c innovation_rejected;\x8c fused;\x86[4] _padding0;";

ORB_DEFINE(estimator_aid_src_baro_hgt, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_baro_hgt));
ORB_DEFINE(estimator_aid_src_ev_hgt, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_ev_hgt));
ORB_DEFINE(estimator_aid_src_gnss_hgt, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_gnss_hgt));
ORB_DEFINE(estimator_aid_src_rng_hgt, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_rng_hgt));
ORB_DEFINE(estimator_aid_src_airspeed, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_airspeed));
ORB_DEFINE(estimator_aid_src_sideslip, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_sideslip));
ORB_DEFINE(estimator_aid_src_fake_hgt, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_fake_hgt));
ORB_DEFINE(estimator_aid_src_mag_heading, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_mag_heading));
ORB_DEFINE(estimator_aid_src_gnss_yaw, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_gnss_yaw));
ORB_DEFINE(estimator_aid_src_ev_yaw, struct estimator_aid_source1d_s, 52, __orb_estimator_aid_source1d_fields, static_cast<uint8_t>(ORB_ID::estimator_aid_src_ev_yaw));


void print_message(const orb_metadata *meta, const estimator_aid_source1d_s& message)
{
	if (sizeof(message) != meta->o_size) {
		LOG_RAW("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	// orb_print_message_internal(meta, &message, true);
}
